work
script\convSvnDiffToBatfile.vbs
convertAllXlsToTxt.bat
list.csv




■■■■■■■■■■■■■■■■■■■script\convSvnDiffToBatfile.vbs
'SVNDIFF -sammaryの結果をXdoc2txtのコマンドに変換する
' 引数1:SVNDIFFの結果(ファイルパス)
' 引数2:コマンドバッチファイル(ファイルパス)
' 引数3:ファイルパス置換前(Excelファイルの格納先)
' 引数4:ファイルパス置換後(テキスト化ファイルの格納先)

'変換対象外の拡張子
CONST BLACKLIST_NOTCONV_EXTENT="bat,db,lnk,mac,txt,svn"

Dim fsoObj
Set fsoObj = CreateObject("Scripting.FileSystemObject")

Dim iFile
Dim oFile
Dim repFrom
Dim repTo

Dim regObj
Set regObj = New RegExp
regObj.IgnoreCase = True '大文字小文字を区別しない
regObj.Global = True '最初の１つではなく全体を対象とする
regObj.Pattern = "^.. +(.*)$"

Dim dirDic
Set dirDic = CreateObject("Scripting.Dictionary")

repFrom = Wscript.Arguments(2)
repTo = Wscript.Arguments(3)

Set iFile = fsoObj.OpenTextFile(Wscript.Arguments(0), 1)
Set oFile = fsoObj.OpenTextFile(Wscript.Arguments(1), 2, True)

Dim tmpLine
Do While iFile.AtEndOfStream = False
	tmpLine = iFile.readLine
	Dim convFrom
	Dim convTo
	Dim convFlg
	convFrom = regObj.Replace(tmpLine, "$1")
	convTo = Replace(convFrom, repFrom, repTo) & ".txt"
	convFlg = False
	
	'変換するかどうか確定
	If fsoObj.FileExists(convFrom) Then
		'拡張子ブラックリスト
		Dim extension
		extension = Lcase(fsoObj.GetExtensionName(convFrom))
		If extension <> "" Then
			If Instr("," & BLACKLIST_NOTCONV_EXTENT & ",", extension) = 0 Then
				convFlg = True
			End If
		End If
	Else
		'変換元のファイルもフォルダも存在しなければ、txtファイルも連動して削除
		If Not fsoObj.FolderExists(contFrom) Then
			If fsoObj.FileExists(convTo) Then
				oFile.WriteLine("del """ & convTo & """")
			End If
		End If
	End If
	
	'変換実行
	If convFlg Then
		Dim convToDir
		convToDir = Left(convTo, InstrRev(convTo, "\")-1)
		Wscript.Echo convFrom
		If Not fsoObj.FolderExists(convToDir) And Not dirDic.Exists(convToDir) Then
			oFile.WriteLine("mkdir """ & convToDir & """")
			dirDic(convToDir) = "dummy"
		End If
		oFile.WriteLine("xdoc2txt """ & convFrom & """>""" & convTo & """")
	End If
Loop

oFile.WriteLine("EXIT /B")

iFile.Close
oFile.Close

Set dirDic = Nothing
Set fsoObj = Nothing
Set regObj = Nothing


■■■■■■■■■■■■■■■■■■■convertAllXlsToTxt.bat
@ECHO OFF
setlocal enabledelayedexpansion

REM カレントフォルダとタイムスタンプ
SET CURRENT=%~d0%~p0
%~d0
CD %CURRENT%
SET TIMESTAMP_DATE=%date:~-10,4%%date:~-5,2%%date:~-2,2%
SET tmp=%time: =0%
SET TIMESTAMP_TIME=%tmp:~0,2%%tmp:~3,2%%tmp:~6,2%
SET TIMESTAMP=%TIMESTAMP_DATE%_%TIMESTAMP_TIME%

SET PAUSE_FLG=FALSE

:choce_record
SET CSV_FILE=%CURRENT%list.csv
SET CSV_FILE_AFTER=%CURRENT%list_after.csv
FOR /F "eol=# tokens=1-4 delims=," %%I in (%CSV_FILE%) do (
	 CALL :CORE %%I,%%J,%%K,%%L
)

COPY /Y "%CSV_FILE_AFTER%" "%CSV_FILE%">nul
DEL "%CSV_FILE_AFTER%"

EXIT /B

:CORE
REM 名前
SET TARGET_NAME=%1
REM ワークコピーのフォルダ
SET WORKCOPY=%2
REM Excelテキスト化ファイルの格納先フォルダ
SET DIR_EXCELTXT=%3
REM 前回実行時リビジョン
SET REVISION_PRE=%4
REM svnDiff出力ファイル
SET FILEPATH_SVNDIFF=%CURRENT%work\%1\%TIMESTAMP%_svnDiff.txt
REM バッチファイル(Excelテキスト化)
SET FILEPATH_X2T=%CURRENT%work\%1\%TIMESTAMP%_x2t.bat
REM ログファイルパス
SET FILEPATH_LOG=%CURRENT%work\%1\%TIMESTAMP%.log

IF NOT EXIST %CURRENT%work\%1 MKDIR %CURRENT%work\%1

REM ワークコピーのリビジョンをREVISION_WORKCOPYに格納
for /F "delims=: tokens=1,2,3,4" %%I in ('svn info %WORKCOPY%') do (
	IF "%%I"=="最終変更リビジョン" (
		SET REVISION_WORKCOPY=%%J
	)
	IF "%%I"=="URL" (
		SET REPO_URL=%%J:%%K:%%L
	)
)
SET REVISION_WORKCOPY=%REVISION_WORKCOPY: =%
SET REPO_URL=%REPO_URL: =%
REM 最後に":"がついていたら取り除く(file:～リポジトリとurlのリポジトリの差を吸収)
IF "%REPO_URL:~-1%"==":" SET REPO_URL=%REPO_URL:~0,-1%

REM サーバの最新版リビジョン番号を取得
for /F "delims=: tokens=1,2,3" %%I in ('svn info %REPO_URL%') do (
	IF "%%I"=="最終変更リビジョン" (
		SET REVISION_REPO=%%J
	)
)
SET REVISION_REPO=%REVISION_REPO: =%

REM 前に実行したときのリビジョン(存在しなければlogから最古を取得)
IF "%REVISION_PRE%"=="" (
	for /F "delims=| tokens=1" %%I in ('svn log -q %WORKCOPY% ^|find "r"') do (
		SET REVISION_PRE=%%I
	)
)
SET REVISION_PRE=%REVISION_PRE:r=%
SET REVISION_PRE=%REVISION_PRE: =%

REM 設定情報表示
ECHO .
ECHO ワークコピーのパス:%WORKCOPY%
ECHO REPURL:%REPO_URL%
ECHO テキストファイル格納先フォルダ:%DIR_EXCELTXT%
ECHO サーバの最終変更リビジョン:%REVISION_REPO%
ECHO ワークコピーの最終変更リビジョン:%REVISION_WORKCOPY%
ECHO 前回実行時リビジョン:%REVISION_PRE%

IF NOT "%REVISION_REPO%"=="%REVISION_WORKCOPY%" (
	ECHO ワークコピー%WORKCOPY%が古くなっています。最新化してください。
	SET REVISION_WORKCOPY=%REVISION_PRE%
	IF %PAUSE_FLG%==TRUE pause
	GOTO :ERROR_END
)

REM 前回実行時からバージョンアップしていればテキストファイルに反映
IF NOT %REVISION_PRE%==%REVISION_REPO% (
	IF %PAUSE_FLG%==TRUE pause
	ECHO ..
	
	REM 前回からの更新分を取得(ファイルパス一覧をファイル出力)
	svn diff %WORKCOPY% -r %REVISION_PRE%:head --summarize >%FILEPATH_SVNDIFF%
	REM xlsdoc作成バッチファイルに変換
	cscript script\convSvnDiffToBatfile.vbs %FILEPATH_SVNDIFF% %FILEPATH_X2T% %WORKCOPY% %DIR_EXCELTXT% %FILEPATH_ZIP%
	REM バッチファイル実行
	CMD /C %FILEPATH_X2T%
)
:ERROR_END
ECHO %1,%2,%3,%REVISION_WORKCOPY%>>%CSV_FILE_AFTER%

EXIT /B



■■■■■■■■■■■■■■■■■■■list.csv
#1要素目
#    名前です。ファイル名とフォルダ名に使いますので、記号は使わないでください。ほかと被らなければOKです。
#2要素目
#    チェックアウト済み、最新化済みのワークコピーを指定します。
#3要素目
#    格納先フォルダは任意の場所でOKです。フォルダが未作成でもOKです。
#    ここで指定したフォルダにExcelをテキスト化したファイルが蓄積されます。
#4要素目
#    前回実行時のリビジョンです。バッチで自動設定しますので、空にしてください。1にも0にもしないでください。
テスト,H:\00.frontRep\X03.SVNテストフォルダ\test,D:\ExcelGrep\TestBat\testout,264

